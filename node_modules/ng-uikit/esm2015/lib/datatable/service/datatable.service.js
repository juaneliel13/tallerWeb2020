/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class DatatableService {
    constructor() { }
    /**
     * @param {?} rows
     * @param {?} size
     * @param {?} pageNum
     * @return {?}
     */
    getPageData(rows, size, pageNum) {
        /** @type {?} */
        const start = (pageNum - 1) * size;
        /** @type {?} */
        const last = (start + size) > rows.length ? rows.length : start + size;
        return {
            startIndex: start,
            rows: rows.slice(start, last),
            lastIndex: last
        };
    }
}
DatatableService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
DatatableService.ctorParameters = () => [];
/** @nocollapse */ DatatableService.ngInjectableDef = i0.defineInjectable({ factory: function DatatableService_Factory() { return new DatatableService(); }, token: DatatableService, providedIn: "root" });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy11aWtpdC8iLCJzb3VyY2VzIjpbImxpYi9kYXRhdGFibGUvc2VydmljZS9kYXRhdGFibGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFNM0MsTUFBTTtJQUVKLGdCQUFnQixDQUFDOzs7Ozs7O0lBRWpCLFdBQVcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU87O2NBQ3ZCLEtBQUssR0FBRyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJOztjQUM1QixJQUFJLEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLElBQUk7UUFDdEUsTUFBTSxDQUFDO1lBQ0wsVUFBVSxFQUFFLEtBQUs7WUFDakIsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQztZQUM3QixTQUFTLEVBQUUsSUFBSTtTQUNoQixDQUFDO0lBQ0osQ0FBQzs7O1lBZkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1BhZ2V9IGZyb20gXCIuLi9kYXRhdGFibGUuaW50ZXJmYWNlXCI7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhdGFibGVTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgZ2V0UGFnZURhdGEocm93cywgc2l6ZSwgcGFnZU51bSk6IFBhZ2Uge1xyXG4gICAgY29uc3Qgc3RhcnQgPSAocGFnZU51bSAtIDEpICogc2l6ZTtcclxuICAgIGNvbnN0IGxhc3QgPSAoc3RhcnQgKyBzaXplKSA+IHJvd3MubGVuZ3RoID8gcm93cy5sZW5ndGggOiBzdGFydCArIHNpemU7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzdGFydEluZGV4OiBzdGFydCxcclxuICAgICAgcm93czogcm93cy5zbGljZShzdGFydCwgbGFzdCksXHJcbiAgICAgIGxhc3RJbmRleDogbGFzdFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19