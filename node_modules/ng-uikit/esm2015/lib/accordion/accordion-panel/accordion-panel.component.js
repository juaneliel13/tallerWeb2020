/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, Input, QueryList } from '@angular/core';
import { AccordionPanelHeaderComponent } from "../accordion-panel-header/accordion-panel-header.component";
export class AccordionPanelComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    get hasHeader() {
        return this.headerComponent && this.headerComponent.length > 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.index = Math.ceil(1000 * Math.random());
    }
    /**
     * @param {?} i
     * @return {?}
     */
    toggle(i) {
        this.isOpen = !this.isOpen;
    }
}
AccordionPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-accordion-panel',
                template: `<div class="card">
  <div class="card-header" [attr.id]="'heading'+index">
    <h5 class="mb-0">
      <a     data-toggle="collapse" [attr.data-target]="'#collapse'+index"
              [attr.aria-expanded]="isOpen" [attr.aria-controls]="'collapse'+index" (click)="toggle(index)">
        <span class="ui-accordion-header-text" *ngIf="!hasHeader">
          {{header}}
        </span>
        <ng-content select="ui-accordion-panel-header" *ngIf="hasHeader"></ng-content>
      </a>
    </h5>
  </div>
  <div [attr.id]="'collapse'+index" class="collapse " [ngClass]="{'show':isOpen}"
       [attr.aria-labelledby]="'heading'+index" data-parent="#accordionExample">
    <div class="card-body">
      <ng-content></ng-content>
    </div>
  </div>
</div>
`,
                styles: [``]
            },] },
];
AccordionPanelComponent.ctorParameters = () => [];
AccordionPanelComponent.propDecorators = {
    header: [{ type: Input }],
    isOpen: [{ type: Input }],
    headerComponent: [{ type: ContentChildren, args: [AccordionPanelHeaderComponent,] }]
};
if (false) {
    /** @type {?} */
    AccordionPanelComponent.prototype.header;
    /** @type {?} */
    AccordionPanelComponent.prototype.isOpen;
    /** @type {?} */
    AccordionPanelComponent.prototype.index;
    /** @type {?} */
    AccordionPanelComponent.prototype.headerComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXVpa2l0LyIsInNvdXJjZXMiOlsibGliL2FjY29yZGlvbi9hY2NvcmRpb24tcGFuZWwvYWNjb3JkaW9uLXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFVLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSw0REFBNEQsQ0FBQztBQTBCekcsTUFBTTtJQUtKO0lBQ0EsQ0FBQzs7OztJQUNELElBQUksU0FBUztRQUNYLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNqRSxDQUFDOzs7O0lBQ0QsUUFBUTtRQUNOLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsQ0FBQztRQUNOLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFFO0lBQzlCLENBQUM7OztZQXhDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJYO2dCQUNDLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNiOzs7O3FCQUVFLEtBQUs7cUJBQ0wsS0FBSzs4QkFFTCxlQUFlLFNBQUMsNkJBQTZCOzs7O0lBSDlDLHlDQUFnQjs7SUFDaEIseUNBQWdCOztJQUNoQix3Q0FBTTs7SUFDTixrREFBMEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBJbnB1dCwgT25Jbml0LCBRdWVyeUxpc3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtBY2NvcmRpb25QYW5lbEhlYWRlckNvbXBvbmVudH0gZnJvbSBcIi4uL2FjY29yZGlvbi1wYW5lbC1oZWFkZXIvYWNjb3JkaW9uLXBhbmVsLWhlYWRlci5jb21wb25lbnRcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndWktYWNjb3JkaW9uLXBhbmVsJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICA8ZGl2IGNsYXNzPVwiY2FyZC1oZWFkZXJcIiBbYXR0ci5pZF09XCInaGVhZGluZycraW5kZXhcIj5cbiAgICA8aDUgY2xhc3M9XCJtYi0wXCI+XG4gICAgICA8YSAgICAgZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiIFthdHRyLmRhdGEtdGFyZ2V0XT1cIicjY29sbGFwc2UnK2luZGV4XCJcbiAgICAgICAgICAgICAgW2F0dHIuYXJpYS1leHBhbmRlZF09XCJpc09wZW5cIiBbYXR0ci5hcmlhLWNvbnRyb2xzXT1cIidjb2xsYXBzZScraW5kZXhcIiAoY2xpY2spPVwidG9nZ2xlKGluZGV4KVwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInVpLWFjY29yZGlvbi1oZWFkZXItdGV4dFwiICpuZ0lmPVwiIWhhc0hlYWRlclwiPlxuICAgICAgICAgIHt7aGVhZGVyfX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJ1aS1hY2NvcmRpb24tcGFuZWwtaGVhZGVyXCIgKm5nSWY9XCJoYXNIZWFkZXJcIj48L25nLWNvbnRlbnQ+XG4gICAgICA8L2E+XG4gICAgPC9oNT5cbiAgPC9kaXY+XG4gIDxkaXYgW2F0dHIuaWRdPVwiJ2NvbGxhcHNlJytpbmRleFwiIGNsYXNzPVwiY29sbGFwc2UgXCIgW25nQ2xhc3NdPVwieydzaG93Jzppc09wZW59XCJcbiAgICAgICBbYXR0ci5hcmlhLWxhYmVsbGVkYnldPVwiJ2hlYWRpbmcnK2luZGV4XCIgZGF0YS1wYXJlbnQ9XCIjYWNjb3JkaW9uRXhhbXBsZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbmAsXG4gIHN0eWxlczogW2BgXVxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb25QYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGhlYWRlcjtcbiAgQElucHV0KCkgaXNPcGVuO1xuICBpbmRleDtcbiAgQENvbnRlbnRDaGlsZHJlbihBY2NvcmRpb25QYW5lbEhlYWRlckNvbXBvbmVudCkgaGVhZGVyQ29tcG9uZW50OiBRdWVyeUxpc3Q8QWNjb3JkaW9uUGFuZWxIZWFkZXJDb21wb25lbnQ+O1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuICBnZXQgaGFzSGVhZGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmhlYWRlckNvbXBvbmVudCAmJiB0aGlzLmhlYWRlckNvbXBvbmVudC5sZW5ndGggPiAwO1xuICB9XG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5kZXggPSBNYXRoLmNlaWwoMTAwMCAqIE1hdGgucmFuZG9tKCkpO1xuICB9XG5cbiAgdG9nZ2xlKGkpIHtcbiAgICB0aGlzLmlzT3BlbiA9ICF0aGlzLmlzT3BlbiA7XG4gIH1cblxufVxuIl19