import { Component, NgModule, ContentChildren, Input, EventEmitter, Output, ElementRef, Injectable, defineInjectable } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClient } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { BrowserModule } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgUikitComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
NgUikitComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-ng-uikit',
                template: `
    <p>
      ng-uikit works!
    </p>
  `,
                styles: []
            },] },
];
NgUikitComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgUikitModule {
}
NgUikitModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: [NgUikitComponent],
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AccordionComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
AccordionComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-accordion',
                template: `<div class="accordion" id="accordionExample">
  <ng-content></ng-content>
</div>
`,
                styles: [``]
            },] },
];
AccordionComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AccordionPanelHeaderComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
AccordionPanelHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-accordion-panel-header',
                template: `<ng-content></ng-content>
`,
                styles: [``]
            },] },
];
AccordionPanelHeaderComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AccordionPanelComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    get hasHeader() {
        return this.headerComponent && this.headerComponent.length > 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.index = Math.ceil(1000 * Math.random());
    }
    /**
     * @param {?} i
     * @return {?}
     */
    toggle(i) {
        this.isOpen = !this.isOpen;
    }
}
AccordionPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-accordion-panel',
                template: `<div class="card">
  <div class="card-header" [attr.id]="'heading'+index">
    <h5 class="mb-0">
      <a     data-toggle="collapse" [attr.data-target]="'#collapse'+index"
              [attr.aria-expanded]="isOpen" [attr.aria-controls]="'collapse'+index" (click)="toggle(index)">
        <span class="ui-accordion-header-text" *ngIf="!hasHeader">
          {{header}}
        </span>
        <ng-content select="ui-accordion-panel-header" *ngIf="hasHeader"></ng-content>
      </a>
    </h5>
  </div>
  <div [attr.id]="'collapse'+index" class="collapse " [ngClass]="{'show':isOpen}"
       [attr.aria-labelledby]="'heading'+index" data-parent="#accordionExample">
    <div class="card-body">
      <ng-content></ng-content>
    </div>
  </div>
</div>
`,
                styles: [``]
            },] },
];
AccordionPanelComponent.ctorParameters = () => [];
AccordionPanelComponent.propDecorators = {
    header: [{ type: Input }],
    isOpen: [{ type: Input }],
    headerComponent: [{ type: ContentChildren, args: [AccordionPanelHeaderComponent,] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AccordionModule {
}
AccordionModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [AccordionComponent, AccordionPanelComponent, AccordionPanelHeaderComponent],
                exports: [AccordionComponent, AccordionPanelComponent, AccordionPanelHeaderComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AutocompleteComponent {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.label = 'Name';
        this.selected = new EventEmitter();
        this.helpText = 'Enter at least 2 char to search';
        this.filteredList = [];
        this.selectedItem = (this.niddle) ? {} : "";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.sourceURL) {
            this.loadResponse();
        }
    }
    /**
     * @param {?} key
     * @return {?}
     */
    filter(key) {
        if (key && key.length >= 2) {
            this.filteredList = this.filterResult(key);
            console.log(this.filteredList);
        }
        else {
            this.filteredList = [];
            this.selectedItem = (this.niddle) ? {} : "";
        }
    }
    /**
     * @param {?} key
     * @return {?}
     */
    filterResult(key) {
        /** @type {?} */
        const result = [];
        this.source.forEach((item) => {
            /** @type {?} */
            const name = (this.niddle) ? item[this.niddle].toLowerCase() : item.toString().toLowerCase();
            if (name.indexOf(key.toLowerCase()) !== -1 && (result.length < 10)) {
                result.push(item);
            }
            else {
                return true;
            }
        });
        return result;
    }
    /**
     * @return {?}
     */
    loadResponse() {
        /** @type {?} */
        const url = this.sourceURL || '../../assets/autocomplete.json';
        this.http.get(url).subscribe((res) => {
            if (Array.isArray(res)) {
                this.source = res;
            }
        });
    }
    /**
     * @param {?} item
     * @return {?}
     */
    getText(item) {
        return (this.niddle) ? item[this.niddle] : item;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    selectItem(item) {
        this.selectedItem = item;
        this.filteredList = [];
        this.selected.emit(item);
    }
}
AutocompleteComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-autocomplete',
                template: `<div class="form-group ui-autocomplete">
  <label for="UIAutocomplete">{{label}}</label>
  <input *ngIf="niddle" type="text" class="form-control" id="UIAutocomplete1" aria-describedby="emailHelp" placeholder="Enter {{label}}"
         [ngModel]="selectedItem[niddle]" (keyup)="filter($event.target.value)" autocomplete="off">

  <input *ngIf="!niddle" type="text" class="form-control" id="UIAutocomplete" aria-describedby="emailHelp" placeholder="Enter {{label}}"
         [ngModel]="selectedItem" (keyup)="filter($event.target.value)" autocomplete="off">
  <small id="emailHelp" class="form-text text-muted" *ngIf="helpText">{{helpText}}</small>
  <div class="ui-autocomplete-container">
    <ul class="list-group ui-autocomplete-list" *ngIf="filteredList.length">
      <li class="list-group-item ui-autocomplete-list-item" (click)="selectItem(item)" *ngFor="let item of filteredList">{{getText(item)}}</li>
    </ul>
  </div>
</div>
`,
                styles: [`.ui-autocomplete-container{position:relative}.ui-autocomplete-list{position:absolute;z-index:9;width:100%}.ui-autocomplete-list-item:hover{cursor:pointer;color:#fff;background-color:#007bff;border-color:#007bff}`]
            },] },
];
AutocompleteComponent.ctorParameters = () => [
    { type: HttpClient }
];
AutocompleteComponent.propDecorators = {
    source: [{ type: Input }],
    sourceURL: [{ type: Input }],
    niddle: [{ type: Input }],
    label: [{ type: Input }],
    selected: [{ type: Output }],
    helpText: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AutocompleteModule {
}
AutocompleteModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule
                ],
                declarations: [AutocompleteComponent],
                exports: [AutocompleteComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CardComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
CardComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-card',
                template: `<div class="card" style="width: 18rem;" *ngIf="config">
  <img class="card-img-top" src="{{config.src}}" alt="{{config.alt || config.title}}" *ngIf="config.src">
  <div class="card-body">
    <h5 class="card-title">{{config.title}}</h5>
    <ng-content></ng-content>
  </div>
</div>
`,
                styles: [``]
            },] },
];
CardComponent.ctorParameters = () => [];
CardComponent.propDecorators = {
    config: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CardModule {
}
CardModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [CardComponent],
                exports: [CardComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CarouselComponent {
    constructor() {
        this.items = [];
        this.afterNext = new EventEmitter();
        this.afterPrev = new EventEmitter();
        this.width = '600px';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.activeIndex = 0;
        this.count = this.items.length;
    }
    /**
     * @return {?}
     */
    next() {
        (this.activeIndex < this.count - 1) ? this.activeIndex++ : this.activeIndex = 0;
        this.afterNext.emit({
            index: this.activeIndex,
            item: this.items[this.activeIndex]
        });
    }
    /**
     * @return {?}
     */
    prev() {
        (this.activeIndex >= 1) ? this.activeIndex-- : this.activeIndex = this.count - 1;
        this.afterPrev.emit({
            index: this.activeIndex,
            item: this.items[this.activeIndex]
        });
    }
    /**
     * @param {?} i
     * @return {?}
     */
    goTo(i) {
        this.activeIndex = i;
    }
}
CarouselComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-carousel',
                template: `<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel" [ngStyle]="{width: width}">
  <ol class="carousel-indicators">
      <li data-target="#carouselExampleIndicators" attr.data-slide-to="{{i}}" *ngFor="let item of items; let i=index;"
          [ngClass]="{'active':i == activeIndex}" (click)="goTo(i)">
      </li>
  </ol>
  <div class="carousel-inner">
    <div class="carousel-item" *ngFor="let item of items; let i=index;" [ngClass]="{'active':i == activeIndex}">
      <img src="{{item.src}}" alt="{{item.alt}}">
      <div class="carousel-caption d-none d-md-block">
        <h5>{{item.alt}}</h5>
        <p>{{item.alt}}</p>
      </div>
    </div>
  </div>
  <a class="carousel-control-prev" (click)="prev()" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" (click)="next()" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>
`,
                styles: [``]
            },] },
];
CarouselComponent.ctorParameters = () => [];
CarouselComponent.propDecorators = {
    items: [{ type: Input }],
    afterNext: [{ type: Output }],
    afterPrev: [{ type: Output }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CarouselModule {
}
CarouselModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    BrowserModule
                ],
                declarations: [CarouselComponent],
                exports: [CarouselComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ChartComponent {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this.width = '400px';
        this.height = '400px';
        this.clickChart = new EventEmitter();
        this.responsive = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        /** @type {?} */
        const ctx = this.el.nativeElement.children[0].children[0].getContext('2d');
        /** @type {?} */
        const _that = this;
        Chart.plugins.register({
            afterDatasetsDraw: function (chartInstance, easing) {
                // To only draw at the end of animation, check for easing === 1
                /** @type {?} */
                var ctx = chartInstance.chart.ctx;
                chartInstance.data.datasets.forEach(function (dataset, i) {
                    /** @type {?} */
                    var meta = chartInstance.getDatasetMeta(i);
                    if (!meta.hidden) {
                        meta.data.forEach(function (element, index) {
                            // Draw the text in black, with the specified font
                            ctx.fillStyle = 'rgb(0, 0, 0)';
                            /** @type {?} */
                            var fontSize = 16;
                            /** @type {?} */
                            var fontStyle = 'normal';
                            /** @type {?} */
                            var fontFamily = 'Helvetica Neue';
                            ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);
                            // Just naively convert to string for now
                            /** @type {?} */
                            var dataString = dataset.data[index].toString();
                            // Make sure alignment settings are correct
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'middle';
                            /** @type {?} */
                            var padding = 5;
                            /** @type {?} */
                            var position = element.tooltipPosition();
                            ctx.fillText(dataString, position.x, position.y - (fontSize / 2) - padding);
                        });
                    }
                });
            }
        });
        this.chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'bar',
            // The data for our dataset
            data: this.data,
            maintainAspectRatio: false,
            responsive: true,
            // Configuration options go here
            options: {
                onClick: function (e) {
                    /** @type {?} */
                    let activePoints = _that.chart.getElementsAtEvent(e);
                    /** @type {?} */
                    let index = activePoints[0]._index;
                    _that.clickChart.emit({ y: this.data.datasets[0].data[index], x: this.data.labels[index] });
                },
                title: {
                    display: true,
                    text: 'My Title',
                    fontSize: 16
                },
                legend: {
                    enabled: false,
                },
                scales: {
                    yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                },
                layout: {
                    padding: {
                        left: 50,
                        right: 0,
                        top: 0,
                        bottom: 0
                    }
                }
            },
            onClick: function (e) {
                /** @type {?} */
                let activePoints = _that.chart.getElementsAtEvent(e);
                /** @type {?} */
                let selectedIndex = activePoints[0]._index;
                console.log(this.data.datasets[0].data[selectedIndex]);
            }
        });
    }
    /**
     * @param {?} e
     * @return {?}
     */
    onCanvasClick(e) {
        // if(this.chart) {
        //   let element = this.chart.getElementAtEvent(event);
        //   let dataset = this.chart.getDatasetAtEvent(event);
        //   if(element && element[0] && dataset) {
        //     this.clickChart.emit({originalEvent: event, element: element[0], dataset: dataset});
        //   }
        // }
    }
}
ChartComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-chart',
                template: `<div style="position:relative" [style.width]="responsive && !width ? null : width" [style.height]="responsive && !height ? null : height">
  <canvas [attr.width]="responsive && !width ? null : width" [attr.height]="responsive && !height ? null : height" (click)="onCanvasClick($event)"></canvas>
</div>
`,
                styles: [``]
            },] },
];
ChartComponent.ctorParameters = () => [
    { type: ElementRef }
];
ChartComponent.propDecorators = {
    data: [{ type: Input }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    clickChart: [{ type: Output }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ChartModule {
}
ChartModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [ChartComponent],
                exports: [ChartComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatatableService {
    constructor() { }
    /**
     * @param {?} rows
     * @param {?} size
     * @param {?} pageNum
     * @return {?}
     */
    getPageData(rows, size, pageNum) {
        /** @type {?} */
        const start = (pageNum - 1) * size;
        /** @type {?} */
        const last = (start + size) > rows.length ? rows.length : start + size;
        return {
            startIndex: start,
            rows: rows.slice(start, last),
            lastIndex: last
        };
    }
}
DatatableService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
DatatableService.ctorParameters = () => [];
/** @nocollapse */ DatatableService.ngInjectableDef = defineInjectable({ factory: function DatatableService_Factory() { return new DatatableService(); }, token: DatatableService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatatableComponent {
    /**
     * @param {?} _dts
     */
    constructor(_dts) {
        this._dts = _dts;
        this.pageChange = new EventEmitter();
        this.sorted = new EventEmitter();
        this.size = 6;
        this.search = {};
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.page = this._dts.getPageData(this.rows, this.size, 1);
        console.log(this.page);
        this.resultCount = this.rows.length;
    }
    /**
     * @param {?} col
     * @return {?}
     */
    getColumnClass(col) {
        /** @type {?} */
        let className = ' ui-dt-cell ';
        if (col.className) {
            className += col.className + ' ';
        }
        if (col.sortable) {
            className += ' sortable';
        }
        return className;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    onPageChange(e) {
        this.page = this._dts.getPageData(this.rows, this.size, e.pageNum);
    }
    /**
     * @param {?} item
     * @return {?}
     */
    sort(item) {
        this.page.rows.sort(this.dynamicSort(item.field));
    }
    /**
     * @param {?} property
     * @return {?}
     */
    dynamicSort(property) {
        /** @type {?} */
        var sortOrder = 1;
        if (property[0] === '-') {
            sortOrder = -1;
            property = property.substr(1);
        }
        return function (a, b) {
            if (sortOrder === -1) {
                return b[property].toString().localeCompare(a[property]);
            }
            else {
                return a[property].toString().localeCompare(b[property]);
            }
        };
    }
    /**
     * @param {?} event
     * @param {?} field
     * @param {?} val
     * @return {?}
     */
    filter(event, field, val) {
        if (val.toString().length) {
            if (event.keyCode === 13 || event.which === 13) {
                this.search = {};
                this.search[field] = val;
                console.log(field, this.search, this.rows);
                /** @type {?} */
                const rows = [];
                this.rows.forEach((item) => {
                    if (item[field].toString().toLowerCase().indexOf(val.toString().toLowerCase()) !== -1) {
                        rows.push(item);
                    }
                });
                this.resultCount = rows.length;
                this.page = this._dts.getPageData(rows, this.size, 1);
            }
        }
        else {
            this.resultCount = this.rows.length;
            this.page = this._dts.getPageData(this.rows, this.size, 1);
        }
    }
}
DatatableComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-datatable',
                template: `<div class="ui-dt-table">
  <div class="ui-dt-thead row">
    <div *ngFor="let col of columns" [ngClass]="getColumnClass(col)"  >
      {{col.label}}
      <i class="fas fa-sort-amount-up" (click)="sort(col)"></i>
    </div>
  </div>
  <div class="ui-dt-thead row">
    <div *ngFor="let col of columns" [ngClass]="getColumnClass(col)"  >
        <input type="text" class="form-control form-control-sm"
               [name]="col.field"
               [ngModel]="search[col.field]"
               (keyup)="filter($event, col.field, $event.target.value)"
        >
    </div>
  </div>
  <div class="ui-dt-tbody">
    <div *ngFor="let row of page.rows;let i=index;" class="row ui-dt-row">
      <div [attr.class]="col.className +' ui-dt-cell'" *ngFor="let col of columns;let k=index;">
         {{row[col.field]}}
      </div>
    </div>
  </div>
</div>
<ui-pagination
  [size]="size"
  [totalCount]="resultCount"
  (pageChange)="onPageChange($event)">
</ui-pagination>

`,
                styles: [`.ui-dt-thead{border-bottom:1px solid #999}.ui-dt-thead .ui-dt-cell{font-weight:500}.ui-dt-row{border-bottom:1px solid #999}.ui-dt-cell{-ms-word-break:break-word;word-break:break-word;border-left:1px solid #ddd;padding:5px}.ui-dt-row .ui-dt-cell:last-child{border-right:1px solid #ddd}`]
            },] },
];
DatatableComponent.ctorParameters = () => [
    { type: DatatableService }
];
DatatableComponent.propDecorators = {
    rows: [{ type: Input }],
    columns: [{ type: Input }],
    pageChange: [{ type: Output }],
    sorted: [{ type: Output }],
    size: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class PagingService {
    constructor() {
    }
    /**
     * @return {?}
     */
    get size() {
        return this._size;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set size(value) {
        this._size = value;
    }
    /**
     * @return {?}
     */
    get totalCount() {
        return this._totalCount;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set totalCount(value) {
        this._totalCount = value;
    }
    /**
     * @param {?} totalCount
     * @return {?}
     */
    getListOfPage(totalCount) {
        return Math.ceil(totalCount / this._size);
    }
}
PagingService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
PagingService.ctorParameters = () => [];
/** @nocollapse */ PagingService.ngInjectableDef = defineInjectable({ factory: function PagingService_Factory() { return new PagingService(); }, token: PagingService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class PaginationComponent {
    /**
     * @param {?} _pgs
     */
    constructor(_pgs) {
        this._pgs = _pgs;
        this.size = 10;
        this.pageChange = new EventEmitter();
        this.pageNum = 1;
        this.displayNumbers = 5;
        this.lastPage = 5;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this._pgs.size = this.size;
        this._pgs.totalCount = this.totalCount;
        this.pageCount = this._pgs.getListOfPage(this.totalCount);
        this.totalPages = Array(this.pageCount).fill(0).map((e, i) => i + 1);
        this.pages = this.totalPages.slice(0, 5);
        this.lastPage = this.pages[this.displayNumbers - 1];
    }
    /**
     * @param {?} e
     * @return {?}
     */
    onPageChange(e) {
        console.log(e);
        this.pageNum = e;
        this.pageChange.emit({
            pageNum: e
        });
    }
    /**
     * @param {?=} isReverse
     * @return {?}
     */
    shiftBoundary(isReverse = false) {
        /** @type {?} */
        let startIndex = (isReverse) ? this.pageNum - this.displayNumbers : this.pageNum - 1;
        /** @type {?} */
        let lastIndex = (isReverse) ? this.pageNum : this.pageNum + this.displayNumbers - 1;
        this.pages = this.totalPages.slice(startIndex, lastIndex);
        this.lastPage = lastIndex;
    }
    /**
     * @return {?}
     */
    next() {
        this.pageNum++;
        if (this.pageNum > this.lastPage)
            this.shiftBoundary();
    }
    /**
     * @return {?}
     */
    prev() {
        this.pageNum--;
        if ((this.pageNum) % this.displayNumbers === 0) {
            this.shiftBoundary(true);
        }
    }
}
PaginationComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-pagination',
                template: `<div class="m-3">
  <nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
      <ng-container>

        <li class="page-item " [ngClass]="{'disabled':pageNum === 1}" (click)="prev()" [attr.disabled]="pageNum === 1">
          <a class="page-link" tabindex="-1">Previous </a>
        </li>

        <li class="page-item" (click)="onPageChange(page)" *ngFor="let page of pages; index as i; first as isFirst; last as isLast;">
          <a class="page-link" [ngClass]="{'active disabled':pageNum===page}">{{page}}</a>
        </li>

        <li class="page-item" *ngIf=" pageCount > displayNumbers && lastPage < pageCount" [ngClass]="{'disabled':pageNum===pages.length}" (click)="shiftBoundary()">
          <a class="page-link">...</a>
        </li>

        <li class="page-item" *ngIf="pageCount > displayNumbers && lastPage < pageCount" [ngClass]="{'disabled':pageNum===pageCount}" (click)="onPageChange(pageCount)">
          <a class="page-link"> {{pageCount}}</a>
        </li>

        <li class="page-item" [ngClass]="{'disabled':pageNum === pageCount}" [attr.disabled]="(pageNum === pageCount)?'disabled':''" (click)="next()">
          <a class="page-link"> Next</a>
        </li>
      </ng-container>
    </ul>
  </nav>
</div>

`,
                styles: [`.page-link:not([href]):not([tabindex]){position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#337ab7;background-color:#fff;border:1px solid #dee2e6}.page-link.active:not([href]):not([tabindex]){position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#fff;background-color:#337ab7;border:1px solid #337ab7}.disabled{pointer-events:none}`]
            },] },
];
PaginationComponent.ctorParameters = () => [
    { type: PagingService }
];
PaginationComponent.propDecorators = {
    totalCount: [{ type: Input }],
    size: [{ type: Input }],
    pageChange: [{ type: Output }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatatableModule {
}
DatatableModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule
                ],
                providers: [DatatableService],
                declarations: [DatatableComponent, PaginationComponent],
                exports: [DatatableComponent, PaginationComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DefaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
/** @type {?} */
const DefaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
/** @type {?} */
const DefaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
/** @type {?} */
const DefaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatepickerService {
    constructor() {
    }
    /**
     * @return {?}
     */
    get dateObj() {
        return this._dateObj;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set dateObj(value) {
        this._dateObj = value;
    }
    /**
     * @return {?}
     */
    getDatesOfMonth() {
        /** @type {?} */
        const d = this.dateObj;
        /** @type {?} */
        const y = d.getFullYear();
        /** @type {?} */
        const m = d.getMonth();
        /** @type {?} */
        const f = new Date(y, m, 1);
        /** @type {?} */
        const l = new Date(y, m + 1, 0);
        /** @type {?} */
        const days = [
            [null, null, null, null, null, null, null],
            [null, null, null, null, null, null, null],
            [null, null, null, null, null, null, null],
            [null, null, null, null, null, null, null],
            [null, null, null, null, null, null, null],
            [null, null, null, null, null, null, null]
        ];
        console.log(l.getDate());
        /** @type {?} */
        let c = f.getDay();
        /** @type {?} */
        let row = 0;
        for (let i = 1; i <= l.getDate(); i++) {
            days[row][c] = (i <= 9) ? '0' + i : i + '';
            c++;
            if (c === 7) {
                row++;
                c = 0;
            }
        }
        console.log(row, days);
        return days;
    }
    /**
     * @param {?} year
     * @param {?} month
     * @param {?} day
     * @param {?} hours
     * @param {?} minutes
     * @param {?} seconds
     * @return {?}
     */
    getDateJsonObj(year, month, day, hours, minutes, seconds) {
        this.dateObj = new Date(year, month, day, hours, minutes, seconds);
        /** @type {?} */
        const d = this.dateObj;
        /** @type {?} */
        const date = (d.getDate() <= 9) ? '0' + d.getDate() : d.getDate() + '';
        /** @type {?} */
        const monthNumeric = (d.getMonth() <= 9) ? '0' + d.getMonth() : d.getMonth() + '';
        return {
            day: d.getDay(),
            dayString: DefaultLocaleWeekdays[d.getDay()],
            dayStringShort: DefaultLocaleWeekdaysShort[d.getDay()],
            date: date,
            month: monthNumeric,
            monthString: DefaultLocaleMonths[d.getUTCMonth()],
            monthStringShort: DefaultLocaleMonthsShort[d.getUTCMonth()],
            time: d.getTime().toString(),
            hours: d.getHours().toString(),
            minutes: d.getMinutes().toString(),
            seconds: d.getSeconds().toString(),
            year: d.getFullYear().toString(),
            UTCString: d.toUTCString(),
            numericDate: d.getFullYear() + '-' + monthNumeric + '-' + date + '-' + d.getHours() + '-' + d.getSeconds(),
            formatDate: this.getFormatDate(d)
        };
    }
    /**
     * @param {?} format
     * @return {?}
     */
    setFormat(format) {
        this.format = format;
    }
    /**
     * @private
     * @param {?} d
     * @return {?}
     */
    getFormatDate(d) {
        /** @type {?} */
        let dateStr = this.format;
        console.log(d.getFullYear());
        dateStr = dateStr.replace('yyyy', d.getFullYear());
        dateStr = dateStr.replace('mm', this.getMonthString(d));
        dateStr = dateStr.replace('dd', d.getDate());
        console.log(dateStr);
        return dateStr;
    }
    /**
     * @param {?} date
     * @return {?}
     */
    getMonthString(date) {
        console.log(date.getMonth());
        /** @type {?} */
        var month = date.getMonth() + 1;
        return month < 10 ? '0' + month : '' + month; // ('' + month) for string result
    }
}
DatepickerService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
DatepickerService.ctorParameters = () => [];
/** @nocollapse */ DatepickerService.ngInjectableDef = defineInjectable({ factory: function DatepickerService_Factory() { return new DatepickerService(); }, token: DatepickerService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatepickerComponent {
    /**
     * @param {?} datepickerSvc
     */
    constructor(datepickerSvc) {
        this.datepickerSvc = datepickerSvc;
        this.selected = new EventEmitter();
        this.mode = 'single';
        this.items = [
            {
                url: 'a',
                text: 'Action',
                isDivider: true
            }, {
                url: 'a',
                text: 'Another action'
            }, {
                url: 'a',
                text: 'Something else here'
            }
        ];
        this.defaultLocaleWeekdaysShort = DefaultLocaleWeekdaysShort;
        this.range = {
            from: null,
            to: null
        };
        this.showCal = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.labelText = 'Select Date';
        /** @type {?} */
        const d = new Date();
        this.datepickerSvc.setFormat(this.format || 'yyyy-mm-dd');
        this.selectedDateTime = this.datepickerSvc.getDateJsonObj(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());
        this.daysList = this.datepickerSvc.getDatesOfMonth();
    }
    /**
     * @param {?} day
     * @return {?}
     */
    isWithinRange(day) {
        if (day) {
            /** @type {?} */
            const a = this.selectedDateTime.numericDate.split('-');
            a[2] = (day <= 9) ? '0' + day : day + '';
            /** @type {?} */
            const today = parseInt(a.join(''), 10);
            /** @type {?} */
            const from = parseInt(this.range.from.numericDate.split('-').join(''), 10);
            /** @type {?} */
            const to = parseInt(this.range.to.numericDate.split('-').join(''), 10);
            return (today >= from && today <= to);
        }
        return false;
    }
    /**
     * @param {?} day
     * @return {?}
     */
    getSelectedClass(day) {
        /** @type {?} */
        let isSelected = false;
        day = parseInt(day, 10);
        if (this.mode === 'range') {
            if (this.range.from) {
                isSelected = (this.range.from.date === day);
            }
            if (this.range.from && this.range.to) {
                isSelected = this.isWithinRange(day);
            }
        }
        else {
            isSelected = this.selectedDateTime.date === day;
        }
        return { 'c-datepicker__day--selected': isSelected };
    }
    /**
     * @param {?} day
     * @return {?}
     */
    setDate(day) {
        /** @type {?} */
        const d = this.selectedDateTime;
        this.selectedDateTime = this.datepickerSvc.getDateJsonObj(d.year, d.month, day, d.hours, d.minutes, d.seconds);
        if (this.mode === 'range') {
            if (this.range.from) {
                this.range.to = this.selectedDateTime;
                this.selectedDate = this.range.from.formatDate + " - " + this.range.to.formatDate;
            }
            else {
                this.range.from = this.selectedDateTime;
                this.selectedDate = this.range.from.formatDate + " ";
            }
            this.selected.emit(this.range);
        }
        else {
            this.selectedDate = this.selectedDateTime.formatDate;
            this.showCal = false;
            this.selected.emit(this.selectedDateTime);
        }
    }
    /**
     * @return {?}
     */
    prevMonth() {
        /** @type {?} */
        const d = this.selectedDateTime;
        this.selectedDateTime = this.datepickerSvc.getDateJsonObj(d.year, parseInt(d.month, 10) - 1, d.date, d.hours, d.minutes, d.seconds);
        this.daysList = this.datepickerSvc.getDatesOfMonth();
        this.selected.emit(this.selectedDateTime);
    }
    /**
     * @return {?}
     */
    nextMonth() {
        /** @type {?} */
        const d = this.selectedDateTime;
        this.selectedDateTime = this.datepickerSvc.getDateJsonObj(d.year, parseInt(d.month, 10) + 1, d.date, d.hours, d.minutes, d.seconds);
        this.daysList = this.datepickerSvc.getDatesOfMonth();
        this.selected.emit(this.selectedDateTime);
    }
    /**
     * @return {?}
     */
    clear() {
        this.range = {
            from: null,
            to: null
        };
        this.selectedDate = '';
    }
}
DatepickerComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-datepicker',
                template: `<div class="form-group">
  <label for="basic-url">{{labelText}}</label>
  <div class="input-group mb-3">
    <div class="input-group-prepend">
      <span class="input-group-text">
        <i class="far fa-calendar-alt"></i>
      </span>
    </div>
    <input type="text" class="form-control" placeholder="Date" (focus)="showCal=true" aria-label="Date"
           aria-describedby="basic-addon1" [ngModel]="selectedDate" id="basic-url">
  </div>
</div>
<div class="datepicker-container">
  <div class="c-datepicker c-datepicker--open" *ngIf="showCal">
    <a class="c-datepicker__toggle c-datepicker__toggle--right c-datepicker--show-time js-show-clock"
       title="show time picker">
      <i class="far fa-clock"></i>
    </a>

    <div
      class="c-datepicker__toggle c-datepicker__toggle--left c-datepicker--show-calendar js-show-calendar is-selected">
      <!--&nbsp;
      <a class=""
         title="show date picker">
        <i class="far fa-calendar-alt"></i>
      </a>
      &nbsp;-->

      <i class="far fa-trash-alt" title="clear datepicker" (click)="clear()"></i>

    </div>


    <div class="c-datepicker__header">
      <div class="c-datepicker__header-day">
        <span class="js-day">{{selectedDateTime.formatDate}}</span>
      </div>
      <!--<div class="c-datepicker__header-date">-->
      <!--<span class="c-datepicker__header-date__month js-date-month">Jun 2019</span>-->
      <!--<span class="c-datepicker__header-date__day js-date-day">10th</span>-->
      <!--<span class="c-datepicker__header-date__time js-date-time">-->
      <!--<span class="c-datepicker__header-date__hours js-date-hours active">12</span>:<span-->
      <!--class="c-datepicker__header-date__minutes js-date-minutes">00</span>-->
      <!--</span>-->
      <!--</div>-->
    </div>

    <div class="c-datepicker__calendar" data-rome-id="0">
      <div class="c-datepicker__calendar" style="display: inline-block;">
        <div class="c-datepicker__date">
          <div class="c-datepicker__month">
            <button class="c-datepicker__back" type="button" (click)="prevMonth()"><i class="fas fa-chevron-left"></i>
            </button>
            <button class="c-datepicker__next" type="button" (click)="nextMonth()"><i class="fas fa-chevron-right"></i>
            </button>
            <div class="rd-month-label">{{selectedDateTime.monthStringShort}} {{selectedDateTime.year}}</div>
            <table class="c-datepicker__days">
              <thead class="c-datepicker__days-head">
              <!-- Days Sun - Sat -->
              <tr class="c-datepicker__days-row">
                <th class="c-datepicker__day-head" *ngFor="let day  of defaultLocaleWeekdaysShort">{{day}}</th>
              </tr>
              </thead>
              <tbody class="c-datepicker__days-body" data-rome-offset="0">
              <!-- Date 1-31 -->
              <tr class="c-datepicker__days-row" *ngFor="let row of daysList">
                <td class="c-datepicker__day-body" *ngFor="let day of row" [ngClass]="getSelectedClass(day)"
                    (click)="setDate(day)">
                  <span>{{day}}</span>
                </td>
              </tr>
              <!--<tr class="c-datepicker__days-row">-->
              <!--<td class="c-datepicker__day-body rd-day-prev-month">26</td>-->
              <!--<td class="c-datepicker__day-body c-datepicker__day selected">10</td>-->
              <!--<td class="c-datepicker__day-body rd-day-next-month">01</td>-->
              <!--</tr>  -->
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
    <div class="c-datepicker__clock">
      <div class="c-datepicker__clock__am-pm-toggle">
        <label class="">
          <input class="c-datepicker__toggle c-datepicker__toggle--right c-datepicker__clock--am" type="radio"
                 name="time-date-toggle" value="AM">
          AM
        </label>

        <label class="c-datepicker__toggle--checked">
          <input class="c-datepicker__toggle c-datepicker__toggle--right c-datepicker__clock--pm" type="radio"
                 name="time-date-toggle" value="PM" checked="checked">
          PM
        </label>
      </div>
      <div class="c-datepicker__mask"></div>
      <div class="c-datepicker__clock__hours js-clock-hours active">
        <div class="c-datepicker__clock__num" data-number="3">3</div>
        <div class="c-datepicker__clock__num" data-number="4">4</div>
        <div class="c-datepicker__clock__num" data-number="5">5</div>
        <div class="c-datepicker__clock__num" data-number="6">6</div>
        <div class="c-datepicker__clock__num" data-number="7">7</div>
        <div class="c-datepicker__clock__num" data-number="8">8</div>
        <div class="c-datepicker__clock__num" data-number="9">9</div>
        <div class="c-datepicker__clock__num" data-number="10">10</div>
        <div class="c-datepicker__clock__num" data-number="11">11</div>
        <div class="c-datepicker__clock__num c-datepicker__clock__num--active" data-number="0">12</div>
        <div class="c-datepicker__clock__num" data-number="1">1</div>
        <div class="c-datepicker__clock__num" data-number="2">2</div>
        <div class="c-datepicker__clock-hands">
          <div class="c-datepicker__hour-hand"></div>
        </div>
      </div>
      <div class="c-datepicker__clock__minutes js-clock-minutes">
        <div class="c-datepicker__clock__num" data-number="15">15</div>
        <div class="c-datepicker__clock__num" data-number="20">20</div>
        <div class="c-datepicker__clock__num" data-number="25">25</div>
        <div class="c-datepicker__clock__num" data-number="30">30</div>
        <div class="c-datepicker__clock__num" data-number="35">35</div>
        <div class="c-datepicker__clock__num" data-number="40">40</div>
        <div class="c-datepicker__clock__num" data-number="45">45</div>
        <div class="c-datepicker__clock__num" data-number="50">50</div>
        <div class="c-datepicker__clock__num" data-number="55">55</div>
        <div class="c-datepicker__clock__num c-datepicker__clock__num--active" data-number="0">0</div>
        <div class="c-datepicker__clock__num" data-number="5">5</div>
        <div class="c-datepicker__clock__num" data-number="10">10</div>
        <div class="c-datepicker__clock-hands">
          <div class="c-datepicker__hour-hand"></div>
        </div>
      </div>
    </div>
    <div class="modal-btns">
      <a class="c-btn c-btn--flat js-cancel" (click)="clear()">Cancel</a>
      <a class="c-btn c-btn--flat js-ok" (click)="showCal=false">OK</a>
    </div>
  </div>
</div>
`,
                styles: [`.datepicker-container{position:relative;z-index:999}.c-scrim{position:fixed;left:0;right:0;top:0;bottom:0;background-color:rgba(0,0,0,.541176);opacity:0;transition:opacity .2s;will-change:opacity}.c-scrim--shown{opacity:1}.c-datepicker{min-height:390px;position:absolute;background:#fff;border:0;width:300px;text-align:center;-webkit-tap-highlight-color:transparent;box-shadow:0 14px 45px rgba(0,0,0,.25),0 10px 18px rgba(0,0,0,.22);border-radius:2px;opacity:0;will-change:opacity;transition:opacity .2s ease-in-out,top .2s ease-in-out}.c-datepicker--open{opacity:1;top:50%}.c-datepicker__header{position:relative}.c-datepicker__header-day{height:32px;background:#0097a7;color:#fff;line-height:32px;font-size:12px;font-weight:200;letter-spacing:.3px}.c-datepicker__header::after{content:"";display:table;clear:both}.c-datepicker__header-date{background:#00bcd4;height:150px;padding:16px 0}.rd-month-label{height:56px;line-height:56px;font-size:14px;font-weight:800}.c-datepicker__back,.c-datepicker__next,.c-datepicker__toggle{position:absolute;border:0;background:0 0;line-height:1;width:56px;height:56px;display:inline-block;overflow:hidden;-webkit-font-smoothing:antialiased;cursor:pointer}.c-datepicker__back:focus,.c-datepicker__next:focus,.c-datepicker__toggle:focus{outline:0}.c-datepicker__back{left:0}.c-datepicker__next{right:0}.c-datepicker--show-calendar:after,.c-datepicker--show-time:after{color:#fff;visibility:visible}.c-datepicker__header-date span{display:block;color:#fff;margin:0;transition:opacity .1s ease-in-out}.c-datepicker__header-date__month{cursor:pointer;font-size:24px;opacity:.6}.c-datepicker__header-date__day{cursor:pointer;font-size:64px;opacity:.6}.c-datepicker__header-date__time{font-size:25px;opacity:.6}.c-datepicker__header-date__time>span{display:inline-block}.c-datepicker__header-date__hours,.c-datepicker__header-date__minutes{cursor:pointer}.c-datepicker--show-time.is-selected~.c-datepicker__header .c-datepicker__header-date__time{opacity:1}.c-datepicker--show-time.is-selected~.c-datepicker__header .c-datepicker__header-date__time .c-datepicker__header-date__hours,.c-datepicker--show-time.is-selected~.c-datepicker__header .c-datepicker__header-date__time .c-datepicker__header-date__minutes{opacity:.6}.c-datepicker--show-calendar.is-selected~.c-datepicker__header .c-datepicker__header-date__day,.c-datepicker--show-calendar.is-selected~.c-datepicker__header .c-datepicker__header-date__month,.c-datepicker--show-time.is-selected~.c-datepicker__header .c-datepicker__header-date__time .c-datepicker__header-date__hours.active,.c-datepicker--show-time.is-selected~.c-datepicker__header .c-datepicker__header-date__time .c-datepicker__header-date__minutes.active{opacity:1}.modal-btns{padding:20px;position:absolute;bottom:0;right:0;float:right}.c-datepicker__day-body{font-size:12px;color:rgba(0,0,0,.8);width:36px;height:36px}.c-datepicker__day--selected::after{content:"";position:absolute;left:50%;top:50%;width:35px;height:35px;border-radius:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background:rgba(0,0,0,.05)}.c-datepicker__day-head{color:rgba(0,0,0,.54);font-size:12px;height:36px}.c-datepicker__day-head,c-datepicker__day-body{-webkit-tap-highlight-color:transparent}.c-btn{display:inline-block;min-width:56px;cursor:pointer}.rd-day-next-month,.rd-day-prev-month{opacity:.1;pointer-events:none}.c-datepicker__calendar{height:300px}.c-datepicker__date{position:absolute;left:0;right:0}.c-datepicker__days{margin:10px 20px}.c-datepicker__header-toggle{position:absolute;top:50%;color:#fff;cursor:pointer}.c-datepicker__header-toggle i{font-size:26px}.c-datepicker__header-toggle--left{left:20px}.c-datepicker__header-toggle--right{right:20px}.c-datepicker__header-toggle--inactive{opacity:.2}.c-datepicker__toggle{top:7px;width:45px;height:30px;color:#fff!important;z-index:1;transition:opacity .2s ease-in-out}.c-datepicker__toggle--right{right:0}.c-datepicker__toggle--left{left:0}.c-datepicker__toggle.is-selected{opacity:1}.c-datepicker--show-calendar.is-selected~.c-datepicker__clock,.c-datepicker--show-time.is-selected~.c-datepicker__calendar{display:none}.c-datepicker__clock{position:relative;width:200px;height:200px;padding:160px 0 20px;border-radius:50%;list-style:none;font-size:14px;line-height:50px;margin:0 auto}.c-datepicker__clock .c-datepicker__clock__num{display:block;position:absolute;top:50%;left:50%;width:50px;height:50px;margin:-25px;z-index:98}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(1){-webkit-transform:rotate(0) translate(100px) rotate(0);transform:rotate(0) translate(100px) rotate(0)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(1).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(270deg);transform:translate(-50%,-50%) rotate(270deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(1).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(1):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(270deg);transform:translate(-50%,-50%) rotate(270deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(1):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(2){-webkit-transform:rotate(30deg) translate(100px) rotate(-30deg);transform:rotate(30deg) translate(100px) rotate(-30deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(2).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(300deg);transform:translate(-50%,-50%) rotate(300deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(2).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(2):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(300deg);transform:translate(-50%,-50%) rotate(300deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(2):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(3){-webkit-transform:rotate(60deg) translate(100px) rotate(-60deg);transform:rotate(60deg) translate(100px) rotate(-60deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(3).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(330deg);transform:translate(-50%,-50%) rotate(330deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(3).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(3):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(330deg);transform:translate(-50%,-50%) rotate(330deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(3):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(4){-webkit-transform:rotate(90deg) translate(100px) rotate(-90deg);transform:rotate(90deg) translate(100px) rotate(-90deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(4).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(360deg);transform:translate(-50%,-50%) rotate(360deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(4).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(4):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(360deg);transform:translate(-50%,-50%) rotate(360deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(4):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(5){-webkit-transform:rotate(120deg) translate(100px) rotate(-120deg);transform:rotate(120deg) translate(100px) rotate(-120deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(5).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(390deg);transform:translate(-50%,-50%) rotate(390deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(5).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(5):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(390deg);transform:translate(-50%,-50%) rotate(390deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(5):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(6){-webkit-transform:rotate(150deg) translate(100px) rotate(-150deg);transform:rotate(150deg) translate(100px) rotate(-150deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(6).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(420deg);transform:translate(-50%,-50%) rotate(420deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(6).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(6):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(420deg);transform:translate(-50%,-50%) rotate(420deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(6):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(7){-webkit-transform:rotate(180deg) translate(100px) rotate(-180deg);transform:rotate(180deg) translate(100px) rotate(-180deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(7).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(450deg);transform:translate(-50%,-50%) rotate(450deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(7).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(7):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(450deg);transform:translate(-50%,-50%) rotate(450deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(7):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(8){-webkit-transform:rotate(210deg) translate(100px) rotate(-210deg);transform:rotate(210deg) translate(100px) rotate(-210deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(8).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(480deg);transform:translate(-50%,-50%) rotate(480deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(8).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(8):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(480deg);transform:translate(-50%,-50%) rotate(480deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(8):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(9){-webkit-transform:rotate(240deg) translate(100px) rotate(-240deg);transform:rotate(240deg) translate(100px) rotate(-240deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(9).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(510deg);transform:translate(-50%,-50%) rotate(510deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(9).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(9):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(510deg);transform:translate(-50%,-50%) rotate(510deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(9):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(10){-webkit-transform:rotate(270deg) translate(100px) rotate(-270deg);transform:rotate(270deg) translate(100px) rotate(-270deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(10).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(540deg);transform:translate(-50%,-50%) rotate(540deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(10).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(10):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(540deg);transform:translate(-50%,-50%) rotate(540deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(10):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(11){-webkit-transform:rotate(300deg) translate(100px) rotate(-300deg);transform:rotate(300deg) translate(100px) rotate(-300deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(11).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(570deg);transform:translate(-50%,-50%) rotate(570deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(11).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(11):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(570deg);transform:translate(-50%,-50%) rotate(570deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(11):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(12){-webkit-transform:rotate(330deg) translate(100px) rotate(-330deg);transform:rotate(330deg) translate(100px) rotate(-330deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(12).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(600deg);transform:translate(-50%,-50%) rotate(600deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(12).c-datepicker__clock__num--active:not(.hide-hand)~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(12):hover~.c-datepicker__clock-hands{-webkit-transform:translate(-50%,-50%) rotate(600deg);transform:translate(-50%,-50%) rotate(600deg)}.c-datepicker__clock .c-datepicker__clock__num:nth-of-type(12):hover~.c-datepicker__clock-hands .c-datepicker__hour-hand{opacity:1;background:#00bcd4}.c-datepicker__clock::before{content:"";position:absolute;top:70px;left:-20px;width:240px;height:240px;background:rgba(0,0,0,.05);border-radius:50%}.c-datepicker__clock__am-pm-toggle label,.c-datepicker__clock__num,.c-datepicker__day-body,.u-hover-ball-effect{position:relative;cursor:pointer}.c-datepicker__clock__am-pm-toggle label:before,.c-datepicker__clock__num:before,.c-datepicker__day-body:before,.u-hover-ball-effect:before{content:"";position:absolute;left:50%;top:50%;width:0%;height:0%;border-radius:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:width .1s ease-in-out,height .1s ease-in-out}.c-datepicker__clock__am-pm-toggle label:hover,.c-datepicker__clock__num:hover,.c-datepicker__day-body:hover,.u-hover-ball-effect:hover{color:#fff}.c-datepicker__clock__am-pm-toggle label:hover:before,.c-datepicker__clock__num:hover:before,.c-datepicker__day-body:hover:before,.u-hover-ball-effect:hover:before{background:#00bcd4;width:35px;height:35px;z-index:-1}.c-datepicker__clock__num--active:not(.hide-hand),.c-datepicker__day-body--active:not(.hide-hand){color:#fff}.c-datepicker__clock__num--active:not(.hide-hand):before,.c-datepicker__day-body--active:not(.hide-hand):before{background:#00bcd4;width:35px;height:35px;z-index:-1}.c-datepicker__clock-hands{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%) rotate(180deg);transform:translate(-50%,-50%) rotate(180deg);width:10px;height:10px;border-radius:50%;background:#0097a7}.c-datepicker__hour-hand{position:absolute;opacity:0;height:78px;width:2px;background:#00bcd4;left:4px;top:10px}.c-datepicker__clock__minutes{height:200px;margin:-69px 0 0;width:200px;display:none}.c-datepicker__clock__minutes.active{display:block}.c-datepicker__clock__hours{height:200px;margin:-69px 0 0;width:200px;display:none}.c-datepicker__clock__hours.active{display:block}.c-datepicker__mask{width:127px;height:132px;position:absolute;top:122px;left:37px;z-index:99}.c-datepicker__mask:after{content:' ';width:156px;height:70px;display:block;position:absolute;top:32px;left:0;margin-left:-13px}.c-datepicker__mask:before{content:' ';width:75px;height:158px;display:block;position:absolute;top:6px;left:28px;margin-top:-18px}.c-datepicker__clock--show-minutes .c-datepicker__clock__minutes{visibility:visible}.c-datepicker__clock--show-hours .c-datepicker__clock__minutes,.c-datepicker__clock--show-minutes .c-datepicker__clock__hours{visibility:hidden}.c-datepicker__clock--show-hours .c-datepicker__clock__hours{visibility:visible}.c-datepicker__clock__am-pm-toggle{position:absolute;top:0;left:10px;right:10px;height:40px;padding:20px;line-height:40px}.c-datepicker__clock__am-pm-toggle label{width:40px;position:absolute}.c-datepicker__clock__am-pm-toggle label:nth-child(1){left:0}.c-datepicker__clock__am-pm-toggle label:nth-child(2){right:0}.c-datepicker__clock__am-pm-toggle label.c-datepicker__toggle--checked::after{content:"";position:absolute;left:50%;top:50%;border-radius:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:36px;height:36px;z-index:-1;background:rgba(0,0,0,.05)}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control,.input-group>.form-control-plaintext{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control,.input-group>.form-control-plaintext+.custom-file,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.form-control{margin-left:-1px}.input-group>.custom-file .custom-file-input:focus~.custom-file-label,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.custom-select:not(:last-child),.input-group>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:flex;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append,.input-group-prepend{display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn:focus,.input-group-prepend .btn:focus{z-index:3}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group-lg>.custom-select,.input-group-lg>.form-control:not(textarea){height:calc(2.875rem + 2px)}.input-group-lg>.custom-select,.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-sm>.custom-select,.input-group-sm>.form-control:not(textarea){height:calc(1.8125rem + 2px)}.input-group-sm>.custom-select,.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}`]
            },] },
];
DatepickerComponent.ctorParameters = () => [
    { type: DatepickerService }
];
DatepickerComponent.propDecorators = {
    selected: [{ type: Output }],
    mode: [{ type: Input }],
    format: [{ type: Input }],
    labelText: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DropdownComponent {
    constructor() {
        this.items = [];
        this.buttonText = 'Your Button Text';
        this.isShowDropdown = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.isShowDropdown = this.isOpen || false;
    }
    /**
     * @return {?}
     */
    toggle() {
        this.isShowDropdown = !this.isShowDropdown;
    }
}
DropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-dropdown',
                template: `<div class="dropdown show" [ngClass]="{'show': isShowDropdown}">
  <a class="btn btn-secondary dropdown-toggle" (click)="toggle()" role="button" id="dropdownMenuLink" data-toggle="dropdown"
     aria-haspopup="true" attr.aria-expanded="{{isShowDropdown}}">
    {{buttonText}}
  </a>
  <div class="dropdown-menu dropdown-menu-right" [ngClass]="{'show': isShowDropdown}" aria-labelledby="dropdownMenuLink">
    <ng-container *ngFor="let item of items">
      <a class="dropdown-item" href="{{item.url}}" >{{item.text}}</a>
      <div class="dropdown-divider" *ngIf="item.isDivider"></div>
    </ng-container>
    <ng-content></ng-content>
  </div>
</div>
`,
                styles: [``]
            },] },
];
DropdownComponent.ctorParameters = () => [];
DropdownComponent.propDecorators = {
    items: [{ type: Input }],
    buttonText: [{ type: Input }],
    isOpen: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DropdownModule {
}
DropdownModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [DropdownComponent],
                exports: [DropdownComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatepickerModule {
}
DatepickerModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    BrowserModule,
                    FormsModule,
                    DropdownModule
                ],
                declarations: [DatepickerComponent],
                exports: [DatepickerComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ModalComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    toggle() {
        this.showModel = !this.showModel;
    }
}
ModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-modal',
                template: `<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" (click)="toggle()">
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" [ngClass]="{'show':showModel}">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" (click)="toggle()">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <ng-content></ng-content>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" (click)="toggle()">Close</button>
        <button type="button" class="btn btn-primary" (click)="toggle()">Save changes</button>
      </div>
    </div>
  </div>
</div>
<div class="modal-backdrop fade show" *ngIf="showModel"></div>
`,
                styles: [`.show{display:block;padding-right:16px}`]
            },] },
];
ModalComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ModalModule {
}
ModalModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [ModalComponent],
                exports: [ModalComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TabPanelComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        if (this.isOpen) {
            console.log(this.isOpen);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.index = Math.ceil(1000 * Math.random());
    }
}
TabPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-tab-panel',
                template: `<div class="tab-pane" [attr.id]="'tab'+index" [ngClass]="{'active show':isOpen}" role="tabpanel"
     aria-labelledby="home-tab">
  <ng-content></ng-content>
</div>
`,
                styles: [`.tab-pane{display:none}.tab-pane.active{display:block}`]
            },] },
];
TabPanelComponent.ctorParameters = () => [];
TabPanelComponent.propDecorators = {
    header: [{ type: Input }],
    isOpen: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TabComponent {
    constructor() {
        this.optionTabAfter = 3;
        this.isShowDropdown = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    toggleDropdown() {
        this.isShowDropdown = !this.isShowDropdown;
    }
    /**
     * @param {?} i
     * @return {?}
     */
    toggle(i) {
        this.tabPanels.forEach(tab => {
            tab.isOpen = (tab.index === i);
        });
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.tabs = [];
        this.optionTabs = [];
        /** @type {?} */
        let count = 0;
        this.tabPanels.map(tab => {
            /** @type {?} */
            const tabItem = {
                headerText: tab.header,
                index: tab.index,
                isOpen: !!tab
            };
            count++;
            this.optionTabAfter = (this.optionTabAfter >= this.tabPanels.length) ? this.tabPanels.length : this.optionTabAfter;
            if (count <= this.optionTabAfter) {
                this.tabs.push(tabItem);
            }
            else {
                this.optionTabs.push(tabItem);
            }
        });
        console.log(this.tabs, this.optionTabs);
    }
}
TabComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-tab',
                template: `<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" *ngFor="let item of tabs;index as i">
    <a class="nav-link "
       [attr.id]="'tab'+item.index"
       data-toggle="tab"
       (click)="toggle(item.index)"
       role="tab" aria-controls="home"
       [attr.aria-selected]="item.isOpen"
       [ngClass]="{'active':item.isOpen}">
      {{item.headerText}}
    </a>
  </li>
  <li role="presentation" class="dropdown" *ngIf="optionTabs.length" [ngClass]="{'show': isShowDropdown}">
    <a class="dropdown-toggle" id="myTabDrop" (click)="toggleDropdown()" data-toggle="dropdown" aria-controls="myTabDrop-contents" attr.aria-expanded="{{isShowDropdown}}">more
      <span class="caret"></span>
    </a>
    <ul class="dropdown-menu" aria-labelledby="myTabDrop" id="myTabDrop1-contents" [ngClass]="{'show': isShowDropdown}">
      <li *ngFor="let item of optionTabs">
        <a [attr.id]="'tab'+item.index"
           data-toggle="tab"
           (click)="toggle(item.index)"
           role="tab" aria-controls="home"
           [attr.aria-selected]="item.isOpen"
           [ngClass]="{'active':item.isOpen}">
          {{item.headerText}}</a>
      </li>
    </ul>
  </li>
</ul>
<div class="tab-content" id="myTabContent">
  <ng-content></ng-content>
</div>
`,
                styles: [``]
            },] },
];
TabComponent.ctorParameters = () => [];
TabComponent.propDecorators = {
    optionTabAfter: [{ type: Input }],
    tabPanels: [{ type: ContentChildren, args: [TabPanelComponent,] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TabModule {
}
TabModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    DropdownModule
                ],
                declarations: [TabComponent, TabPanelComponent],
                exports: [TabComponent, TabPanelComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TooltipComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
TooltipComponent.decorators = [
    { type: Component, args: [{
                selector: 'ui-tooltip',
                template: `<p>
  tooltip works!
</p>
`,
                styles: [``]
            },] },
];
TooltipComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TooltipModule {
}
TooltipModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [TooltipComponent],
                exports: [TooltipComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgUikitModule, AccordionModule, AutocompleteModule, CardModule, CarouselModule, ChartModule, DatatableModule, DatepickerModule, DropdownModule, ModalModule, TabModule, TooltipModule, AccordionPanelHeaderComponent as ɵd, AccordionPanelComponent as ɵc, AccordionComponent as ɵb, AutocompleteComponent as ɵe, CardComponent as ɵf, CarouselComponent as ɵg, ChartComponent as ɵh, DatatableComponent as ɵj, PaginationComponent as ɵk, DatatableService as ɵi, PagingService as ɵl, DatepickerComponent as ɵn, DatepickerService as ɵo, DropdownComponent as ɵm, ModalComponent as ɵp, NgUikitComponent as ɵa, TabPanelComponent as ɵr, TabComponent as ɵq, TooltipComponent as ɵs };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,