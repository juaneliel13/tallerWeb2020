/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { HttpClient } from '@angular/common/http';
var AutocompleteComponent = /** @class */ (function () {
    function AutocompleteComponent(http) {
        this.http = http;
        this.label = 'Name';
        this.selected = new EventEmitter();
        this.helpText = 'Enter at least 2 char to search';
        this.filteredList = [];
        this.selectedItem = (this.niddle) ? {} : "";
    }
    /**
     * @return {?}
     */
    AutocompleteComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.sourceURL) {
            this.loadResponse();
        }
    };
    /**
     * @param {?} key
     * @return {?}
     */
    AutocompleteComponent.prototype.filter = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        if (key && key.length >= 2) {
            this.filteredList = this.filterResult(key);
            console.log(this.filteredList);
        }
        else {
            this.filteredList = [];
            this.selectedItem = (this.niddle) ? {} : "";
        }
    };
    /**
     * @param {?} key
     * @return {?}
     */
    AutocompleteComponent.prototype.filterResult = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        var _this = this;
        /** @type {?} */
        var result = [];
        this.source.forEach(function (item) {
            /** @type {?} */
            var name = (_this.niddle) ? item[_this.niddle].toLowerCase() : item.toString().toLowerCase();
            if (name.indexOf(key.toLowerCase()) !== -1 && (result.length < 10)) {
                result.push(item);
            }
            else {
                return true;
            }
        });
        return result;
    };
    /**
     * @return {?}
     */
    AutocompleteComponent.prototype.loadResponse = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = this.sourceURL || '../../assets/autocomplete.json';
        this.http.get(url).subscribe(function (res) {
            if (Array.isArray(res)) {
                _this.source = res;
            }
        });
    };
    /**
     * @param {?} item
     * @return {?}
     */
    AutocompleteComponent.prototype.getText = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        return (this.niddle) ? item[this.niddle] : item;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    AutocompleteComponent.prototype.selectItem = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.selectedItem = item;
        this.filteredList = [];
        this.selected.emit(item);
    };
    AutocompleteComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ui-autocomplete',
                    template: "<div class=\"form-group ui-autocomplete\">\n  <label for=\"UIAutocomplete\">{{label}}</label>\n  <input *ngIf=\"niddle\" type=\"text\" class=\"form-control\" id=\"UIAutocomplete1\" aria-describedby=\"emailHelp\" placeholder=\"Enter {{label}}\"\n         [ngModel]=\"selectedItem[niddle]\" (keyup)=\"filter($event.target.value)\" autocomplete=\"off\">\n\n  <input *ngIf=\"!niddle\" type=\"text\" class=\"form-control\" id=\"UIAutocomplete\" aria-describedby=\"emailHelp\" placeholder=\"Enter {{label}}\"\n         [ngModel]=\"selectedItem\" (keyup)=\"filter($event.target.value)\" autocomplete=\"off\">\n  <small id=\"emailHelp\" class=\"form-text text-muted\" *ngIf=\"helpText\">{{helpText}}</small>\n  <div class=\"ui-autocomplete-container\">\n    <ul class=\"list-group ui-autocomplete-list\" *ngIf=\"filteredList.length\">\n      <li class=\"list-group-item ui-autocomplete-list-item\" (click)=\"selectItem(item)\" *ngFor=\"let item of filteredList\">{{getText(item)}}</li>\n    </ul>\n  </div>\n</div>\n",
                    styles: [".ui-autocomplete-container{position:relative}.ui-autocomplete-list{position:absolute;z-index:9;width:100%}.ui-autocomplete-list-item:hover{cursor:pointer;color:#fff;background-color:#007bff;border-color:#007bff}"]
                },] },
    ];
    AutocompleteComponent.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    AutocompleteComponent.propDecorators = {
        source: [{ type: Input }],
        sourceURL: [{ type: Input }],
        niddle: [{ type: Input }],
        label: [{ type: Input }],
        selected: [{ type: Output }],
        helpText: [{ type: Input }]
    };
    return AutocompleteComponent;
}());
export { AutocompleteComponent };
if (false) {
    /** @type {?} */
    AutocompleteComponent.prototype.source;
    /** @type {?} */
    AutocompleteComponent.prototype.sourceURL;
    /** @type {?} */
    AutocompleteComponent.prototype.niddle;
    /** @type {?} */
    AutocompleteComponent.prototype.label;
    /** @type {?} */
    AutocompleteComponent.prototype.selected;
    /** @type {?} */
    AutocompleteComponent.prototype.helpText;
    /** @type {?} */
    AutocompleteComponent.prototype.filteredList;
    /** @type {?} */
    AutocompleteComponent.prototype.selectedItem;
    /**
     * @type {?}
     * @private
     */
    AutocompleteComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b2NvbXBsZXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXVpa2l0LyIsInNvdXJjZXMiOlsibGliL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUVoRDtJQTZCRSwrQkFBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQU4zQixVQUFLLEdBQUcsTUFBTSxDQUFDO1FBQ2QsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDL0IsYUFBUSxHQUFHLGlDQUFpQyxDQUFDO1FBQ3RELGlCQUFZLEdBQVUsRUFBRSxDQUFDO1FBQ3pCLGlCQUFZLEdBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBRzVDLENBQUM7Ozs7SUFFRCx3Q0FBUTs7O0lBQVI7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNuQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDdEIsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsc0NBQU07Ozs7SUFBTixVQUFPLEdBQUc7UUFDUixFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMzQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNqQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztZQUN2QixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUM5QyxDQUFDO0lBQ0gsQ0FBQzs7Ozs7SUFFRCw0Q0FBWTs7OztJQUFaLFVBQWEsR0FBRztRQUFoQixpQkFXQzs7WUFWTyxNQUFNLEdBQVUsRUFBRTtRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUk7O2dCQUNqQixJQUFJLEdBQUcsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUU7WUFDNUYsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNuRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3BCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2QsQ0FBQztRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNoQixDQUFDOzs7O0lBRUQsNENBQVk7OztJQUFaO1FBQUEsaUJBT0M7O1lBTk8sR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksZ0NBQWdDO1FBQzlELElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFDLEdBQUc7WUFDL0IsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLEtBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQ3BCLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsdUNBQU87Ozs7SUFBUCxVQUFRLElBQUk7UUFDVixNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNsRCxDQUFDOzs7OztJQUVELDBDQUFVOzs7O0lBQVYsVUFBVyxJQUFJO1FBQ2IsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Z0JBOUVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixRQUFRLEVBQUUsay9CQWNYO29CQUNDLE1BQU0sRUFBRSxDQUFDLHFOQUFxTixDQUFDO2lCQUNoTzs7O2dCQXBCTyxVQUFVOzs7eUJBc0JmLEtBQUs7NEJBQ0wsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7MkJBQ0wsTUFBTTsyQkFDTixLQUFLOztJQXNEUiw0QkFBQztDQUFBLEFBL0VELElBK0VDO1NBNURZLHFCQUFxQjs7O0lBQ2hDLHVDQUF1Qjs7SUFDdkIsMENBQTJCOztJQUMzQix1Q0FBZ0I7O0lBQ2hCLHNDQUF3Qjs7SUFDeEIseUNBQXdDOztJQUN4Qyx5Q0FBc0Q7O0lBQ3RELDZDQUF5Qjs7SUFDekIsNkNBQTRDOzs7OztJQUVoQyxxQ0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtIdHRwQ2xpZW50fSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3VpLWF1dG9jb21wbGV0ZScsXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgdWktYXV0b2NvbXBsZXRlXCI+XG4gIDxsYWJlbCBmb3I9XCJVSUF1dG9jb21wbGV0ZVwiPnt7bGFiZWx9fTwvbGFiZWw+XG4gIDxpbnB1dCAqbmdJZj1cIm5pZGRsZVwiIHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBpZD1cIlVJQXV0b2NvbXBsZXRlMVwiIGFyaWEtZGVzY3JpYmVkYnk9XCJlbWFpbEhlbHBcIiBwbGFjZWhvbGRlcj1cIkVudGVyIHt7bGFiZWx9fVwiXG4gICAgICAgICBbbmdNb2RlbF09XCJzZWxlY3RlZEl0ZW1bbmlkZGxlXVwiIChrZXl1cCk9XCJmaWx0ZXIoJGV2ZW50LnRhcmdldC52YWx1ZSlcIiBhdXRvY29tcGxldGU9XCJvZmZcIj5cblxuICA8aW5wdXQgKm5nSWY9XCIhbmlkZGxlXCIgdHlwZT1cInRleHRcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIGlkPVwiVUlBdXRvY29tcGxldGVcIiBhcmlhLWRlc2NyaWJlZGJ5PVwiZW1haWxIZWxwXCIgcGxhY2Vob2xkZXI9XCJFbnRlciB7e2xhYmVsfX1cIlxuICAgICAgICAgW25nTW9kZWxdPVwic2VsZWN0ZWRJdGVtXCIgKGtleXVwKT1cImZpbHRlcigkZXZlbnQudGFyZ2V0LnZhbHVlKVwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiPlxuICA8c21hbGwgaWQ9XCJlbWFpbEhlbHBcIiBjbGFzcz1cImZvcm0tdGV4dCB0ZXh0LW11dGVkXCIgKm5nSWY9XCJoZWxwVGV4dFwiPnt7aGVscFRleHR9fTwvc21hbGw+XG4gIDxkaXYgY2xhc3M9XCJ1aS1hdXRvY29tcGxldGUtY29udGFpbmVyXCI+XG4gICAgPHVsIGNsYXNzPVwibGlzdC1ncm91cCB1aS1hdXRvY29tcGxldGUtbGlzdFwiICpuZ0lmPVwiZmlsdGVyZWRMaXN0Lmxlbmd0aFwiPlxuICAgICAgPGxpIGNsYXNzPVwibGlzdC1ncm91cC1pdGVtIHVpLWF1dG9jb21wbGV0ZS1saXN0LWl0ZW1cIiAoY2xpY2spPVwic2VsZWN0SXRlbShpdGVtKVwiICpuZ0Zvcj1cImxldCBpdGVtIG9mIGZpbHRlcmVkTGlzdFwiPnt7Z2V0VGV4dChpdGVtKX19PC9saT5cbiAgICA8L3VsPlxuICA8L2Rpdj5cbjwvZGl2PlxuYCxcbiAgc3R5bGVzOiBbYC51aS1hdXRvY29tcGxldGUtY29udGFpbmVye3Bvc2l0aW9uOnJlbGF0aXZlfS51aS1hdXRvY29tcGxldGUtbGlzdHtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4Ojk7d2lkdGg6MTAwJX0udWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbTpob3ZlcntjdXJzb3I6cG9pbnRlcjtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn1gXVxufSlcbmV4cG9ydCBjbGFzcyBBdXRvY29tcGxldGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBzb3VyY2U6IGFueVtdO1xuICBASW5wdXQoKSBzb3VyY2VVUkw6IHN0cmluZztcbiAgQElucHV0KCkgbmlkZGxlO1xuICBASW5wdXQoKSBsYWJlbCA9ICdOYW1lJztcbiAgQE91dHB1dCgpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBASW5wdXQoKSBoZWxwVGV4dCA9ICdFbnRlciBhdCBsZWFzdCAyIGNoYXIgdG8gc2VhcmNoJztcbiAgZmlsdGVyZWRMaXN0OiBhbnlbXSA9IFtdO1xuICBzZWxlY3RlZEl0ZW06IGFueSA9ICh0aGlzLm5pZGRsZSkgPyB7fSA6IFwiXCI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5zb3VyY2VVUkwpIHtcbiAgICAgIHRoaXMubG9hZFJlc3BvbnNlKCk7XG4gICAgfVxuICB9XG5cbiAgZmlsdGVyKGtleSkge1xuICAgIGlmIChrZXkgJiYga2V5Lmxlbmd0aCA+PSAyKSB7XG4gICAgICB0aGlzLmZpbHRlcmVkTGlzdCA9IHRoaXMuZmlsdGVyUmVzdWx0KGtleSk7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmZpbHRlcmVkTGlzdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlsdGVyZWRMaXN0ID0gW107XG4gICAgICB0aGlzLnNlbGVjdGVkSXRlbSA9ICh0aGlzLm5pZGRsZSkgPyB7fSA6IFwiXCI7XG4gICAgfVxuICB9XG5cbiAgZmlsdGVyUmVzdWx0KGtleSkge1xuICAgIGNvbnN0IHJlc3VsdDogYW55W10gPSBbXTtcbiAgICB0aGlzLnNvdXJjZS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gKHRoaXMubmlkZGxlKSA/IGl0ZW1bdGhpcy5uaWRkbGVdLnRvTG93ZXJDYXNlKCkgOiBpdGVtLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChuYW1lLmluZGV4T2Yoa2V5LnRvTG93ZXJDYXNlKCkpICE9PSAtMSAmJiAocmVzdWx0Lmxlbmd0aCA8IDEwKSkge1xuICAgICAgICByZXN1bHQucHVzaChpdGVtKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBsb2FkUmVzcG9uc2UoKSB7XG4gICAgY29uc3QgdXJsID0gdGhpcy5zb3VyY2VVUkwgfHwgJy4uLy4uL2Fzc2V0cy9hdXRvY29tcGxldGUuanNvbic7XG4gICAgdGhpcy5odHRwLmdldCh1cmwpLnN1YnNjcmliZSgocmVzKSA9PiB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXMpKSB7XG4gICAgICAgIHRoaXMuc291cmNlID0gcmVzO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZ2V0VGV4dChpdGVtKSB7XG4gICAgcmV0dXJuICh0aGlzLm5pZGRsZSkgPyBpdGVtW3RoaXMubmlkZGxlXSA6IGl0ZW07XG4gIH1cblxuICBzZWxlY3RJdGVtKGl0ZW0pIHtcbiAgICB0aGlzLnNlbGVjdGVkSXRlbSA9IGl0ZW07XG4gICAgdGhpcy5maWx0ZXJlZExpc3QgPSBbXTtcbiAgICB0aGlzLnNlbGVjdGVkLmVtaXQoaXRlbSk7XG4gIH1cbn1cbiJdfQ==