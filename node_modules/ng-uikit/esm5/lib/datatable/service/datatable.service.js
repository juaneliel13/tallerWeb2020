/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var DatatableService = /** @class */ (function () {
    function DatatableService() {
    }
    /**
     * @param {?} rows
     * @param {?} size
     * @param {?} pageNum
     * @return {?}
     */
    DatatableService.prototype.getPageData = /**
     * @param {?} rows
     * @param {?} size
     * @param {?} pageNum
     * @return {?}
     */
    function (rows, size, pageNum) {
        /** @type {?} */
        var start = (pageNum - 1) * size;
        /** @type {?} */
        var last = (start + size) > rows.length ? rows.length : start + size;
        return {
            startIndex: start,
            rows: rows.slice(start, last),
            lastIndex: last
        };
    };
    DatatableService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    DatatableService.ctorParameters = function () { return []; };
    /** @nocollapse */ DatatableService.ngInjectableDef = i0.defineInjectable({ factory: function DatatableService_Factory() { return new DatatableService(); }, token: DatatableService, providedIn: "root" });
    return DatatableService;
}());
export { DatatableService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy11aWtpdC8iLCJzb3VyY2VzIjpbImxpYi9kYXRhdGFibGUvc2VydmljZS9kYXRhdGFibGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHM0M7SUFLRTtJQUFnQixDQUFDOzs7Ozs7O0lBRWpCLHNDQUFXOzs7Ozs7SUFBWCxVQUFZLElBQUksRUFBRSxJQUFJLEVBQUUsT0FBTzs7WUFDdkIsS0FBSyxHQUFHLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUk7O1lBQzVCLElBQUksR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSTtRQUN0RSxNQUFNLENBQUM7WUFDTCxVQUFVLEVBQUUsS0FBSztZQUNqQixJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDO1lBQzdCLFNBQVMsRUFBRSxJQUFJO1NBQ2hCLENBQUM7SUFDSixDQUFDOztnQkFmRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7OzJCQUxEO0NBbUJDLEFBaEJELElBZ0JDO1NBYlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1BhZ2V9IGZyb20gXCIuLi9kYXRhdGFibGUuaW50ZXJmYWNlXCI7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhdGFibGVTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgZ2V0UGFnZURhdGEocm93cywgc2l6ZSwgcGFnZU51bSk6IFBhZ2Uge1xyXG4gICAgY29uc3Qgc3RhcnQgPSAocGFnZU51bSAtIDEpICogc2l6ZTtcclxuICAgIGNvbnN0IGxhc3QgPSAoc3RhcnQgKyBzaXplKSA+IHJvd3MubGVuZ3RoID8gcm93cy5sZW5ndGggOiBzdGFydCArIHNpemU7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzdGFydEluZGV4OiBzdGFydCxcclxuICAgICAgcm93czogcm93cy5zbGljZShzdGFydCwgbGFzdCksXHJcbiAgICAgIGxhc3RJbmRleDogbGFzdFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19