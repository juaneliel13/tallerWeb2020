/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * @record
 */
export function Item() { }
if (false) {
    /** @type {?} */
    Item.prototype.url;
    /** @type {?} */
    Item.prototype.text;
    /** @type {?|undefined} */
    Item.prototype.isDivider;
}
var DropdownComponent = /** @class */ (function () {
    function DropdownComponent() {
        this.items = [];
        this.buttonText = 'Your Button Text';
        this.isShowDropdown = false;
    }
    /**
     * @return {?}
     */
    DropdownComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.isShowDropdown = this.isOpen || false;
    };
    /**
     * @return {?}
     */
    DropdownComponent.prototype.toggle = /**
     * @return {?}
     */
    function () {
        this.isShowDropdown = !this.isShowDropdown;
    };
    DropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ui-dropdown',
                    template: "<div class=\"dropdown show\" [ngClass]=\"{'show': isShowDropdown}\">\n  <a class=\"btn btn-secondary dropdown-toggle\" (click)=\"toggle()\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n     aria-haspopup=\"true\" attr.aria-expanded=\"{{isShowDropdown}}\">\n    {{buttonText}}\n  </a>\n  <div class=\"dropdown-menu dropdown-menu-right\" [ngClass]=\"{'show': isShowDropdown}\" aria-labelledby=\"dropdownMenuLink\">\n    <ng-container *ngFor=\"let item of items\">\n      <a class=\"dropdown-item\" href=\"{{item.url}}\" >{{item.text}}</a>\n      <div class=\"dropdown-divider\" *ngIf=\"item.isDivider\"></div>\n    </ng-container>\n    <ng-content></ng-content>\n  </div>\n</div>\n",
                    styles: [""]
                },] },
    ];
    DropdownComponent.ctorParameters = function () { return []; };
    DropdownComponent.propDecorators = {
        items: [{ type: Input }],
        buttonText: [{ type: Input }],
        isOpen: [{ type: Input }]
    };
    return DropdownComponent;
}());
export { DropdownComponent };
if (false) {
    /** @type {?} */
    DropdownComponent.prototype.items;
    /** @type {?} */
    DropdownComponent.prototype.buttonText;
    /** @type {?} */
    DropdownComponent.prototype.isOpen;
    /** @type {?} */
    DropdownComponent.prototype.isShowDropdown;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctdWlraXQvIiwic291cmNlcyI6WyJsaWIvZHJvcGRvd24vZHJvcGRvd24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQzs7OztBQUV2RCwwQkFJQzs7O0lBSEMsbUJBQVk7O0lBQ1osb0JBQWE7O0lBQ2IseUJBQW9COztBQUd0QjtJQXdCRTtRQUxTLFVBQUssR0FBVyxFQUFFLENBQUM7UUFDbkIsZUFBVSxHQUFHLGtCQUFrQixDQUFDO1FBRXpDLG1CQUFjLEdBQUcsS0FBSyxDQUFDO0lBR3ZCLENBQUM7Ozs7SUFFRCxvQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDO0lBQzdDLENBQUM7Ozs7SUFFRCxrQ0FBTTs7O0lBQU47UUFDRSxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUM3QyxDQUFDOztnQkFqQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixRQUFRLEVBQUUsOHJCQWFYO29CQUNDLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztpQkFDYjs7Ozt3QkFFRSxLQUFLOzZCQUNMLEtBQUs7eUJBQ0wsS0FBSzs7SUFjUix3QkFBQztDQUFBLEFBbkNELElBbUNDO1NBakJZLGlCQUFpQjs7O0lBQzVCLGtDQUE0Qjs7SUFDNUIsdUNBQXlDOztJQUN6QyxtQ0FBZ0I7O0lBQ2hCLDJDQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSXRlbSB7XHJcbiAgdXJsOiBzdHJpbmc7XHJcbiAgdGV4dDogc3RyaW5nO1xyXG4gIGlzRGl2aWRlcj86IGJvb2xlYW47XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAndWktZHJvcGRvd24nLFxyXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cImRyb3Bkb3duIHNob3dcIiBbbmdDbGFzc109XCJ7J3Nob3cnOiBpc1Nob3dEcm9wZG93bn1cIj5cclxuICA8YSBjbGFzcz1cImJ0biBidG4tc2Vjb25kYXJ5IGRyb3Bkb3duLXRvZ2dsZVwiIChjbGljayk9XCJ0b2dnbGUoKVwiIHJvbGU9XCJidXR0b25cIiBpZD1cImRyb3Bkb3duTWVudUxpbmtcIiBkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCJcclxuICAgICBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGF0dHIuYXJpYS1leHBhbmRlZD1cInt7aXNTaG93RHJvcGRvd259fVwiPlxyXG4gICAge3tidXR0b25UZXh0fX1cclxuICA8L2E+XHJcbiAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodFwiIFtuZ0NsYXNzXT1cInsnc2hvdyc6IGlzU2hvd0Ryb3Bkb3dufVwiIGFyaWEtbGFiZWxsZWRieT1cImRyb3Bkb3duTWVudUxpbmtcIj5cclxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGl0ZW0gb2YgaXRlbXNcIj5cclxuICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtXCIgaHJlZj1cInt7aXRlbS51cmx9fVwiID57e2l0ZW0udGV4dH19PC9hPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tZGl2aWRlclwiICpuZ0lmPVwiaXRlbS5pc0RpdmlkZXJcIj48L2Rpdj5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuYCxcclxuICBzdHlsZXM6IFtgYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIERyb3Bkb3duQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSBpdGVtczogSXRlbVtdID0gW107XHJcbiAgQElucHV0KCkgYnV0dG9uVGV4dCA9ICdZb3VyIEJ1dHRvbiBUZXh0JztcclxuICBASW5wdXQoKSBpc09wZW47XHJcbiAgaXNTaG93RHJvcGRvd24gPSBmYWxzZTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaXNTaG93RHJvcGRvd24gPSB0aGlzLmlzT3BlbiB8fCBmYWxzZTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZSgpIHtcclxuICAgIHRoaXMuaXNTaG93RHJvcGRvd24gPSAhdGhpcy5pc1Nob3dEcm9wZG93bjtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==